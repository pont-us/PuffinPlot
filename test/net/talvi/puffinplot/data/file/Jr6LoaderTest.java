/* This file is part of PuffinPlot, a program for palaeomagnetic
 * data plotting and analysis. Copyright 2012-2019 Pontus Lurcock.
 *
 * PuffinPlot is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PuffinPlot is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PuffinPlot. If not, see <http://www.gnu.org/licenses/>.
 */
package net.talvi.puffinplot.data.file;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import net.talvi.puffinplot.data.Correction;
import net.talvi.puffinplot.data.MeasurementType;
import net.talvi.puffinplot.data.Sample;
import net.talvi.puffinplot.data.Suite;
import net.talvi.puffinplot.data.TreatmentType;
import net.talvi.puffinplot.data.TreatmentStep;
import net.talvi.puffinplot.data.file.testdata.TestFileLocator;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class Jr6LoaderTest {
    
    /**
     * Expected values were generated by processing the JR6 file with
     * Remasoft 3.0, then converting the data in the resulting RS3
     * files into Java literals using a custom Python script.
     * One hand edit has been made to the data, where Remasoft re-orders
     * two measurements and I consider PuffinPlot's behaviour more
     * correct -- see comment in data for details.
     * 
     */
    
    private final double[][][][] expected = {{{
        { 0,   0, 1.523319E-02, 273.2, -17.6, 359.5,  -3.6,   999,   999},
        { 1, 100, 1.482801E-02, 273.7, -17.7, 359.4,  -4.1,   999,   999},
        { 1, 150, 1.454957E-02, 274.1, -18.0, 359.1,  -4.6,   999,   999},
        { 1, 200, 1.443122E-02, 274.6, -17.8, 359.4,  -5.0,   999,   999},
        { 1, 250, 1.406023E-02, 275.2, -18.2, 358.9,  -5.5,   999,   999},
        { 1, 300, 1.323556E-02, 275.0, -17.1, 360.0,  -5.4,   999,   999},
        { 1, 350, 1.238588E-02, 275.3, -16.9,   0.2,  -5.7,   999,   999},
        { 1, 400, 1.148129E-02, 275.7, -15.7,   1.5,  -6.0,   999,   999},
        { 1, 425, 1.080787E-02, 274.9, -15.0,   2.1,  -5.3,   999,   999},
        { 1, 450, 8.332881E-03, 275.2, -17.6, 359.5,  -5.6,   999,   999},
        { 1, 475, 7.281346E-03, 274.5, -17.6, 359.5,  -4.9,   999,   999},
        { 1, 500, 1.404671E-03, 269.5,  40.4,  57.4,   1.7,   999,   999},
        { 1, 520, 2.435446E-03,  58.2, -72.3, 271.7, -11.1,   999,   999},
        { 1, 540, 1.107031E-02,  64.5,  -5.4, 202.0, -25.5,   999,   999},
        { 1, 560, 5.173374E-03, 224.0, -55.6, 312.1,  22.1,   999,   999},
        { 1, 580, 5.215563E-03,  42.7,  80.2, 113.6,  -5.2,   999,   999},
        }, {
        { 0,   0, 1.154123E-02, 274.2, -17.1, 360.0,  -4.6,   999,   999},
        }, {
        { 0,   0, 1.484924E-02, 274.9, -17.6, 359.5,  -5.2,   999,   999},
        }, {
        { 0,   0, 1.461985E-02, 272.8, -15.1,   2.0,  -3.3,   999,   999},
        }, {
        { 0,   0, 1.426149E-02, 267.0, -21.0, 355.9,   2.1,   999,   999},
        }, {
        { 0,   0,    0.0146949, 265.4, -20.7, 356.1,   3.6,   999,   999},
        }, {
        { 0,   0, 1.427095E-02, 269.1, -25.3, 351.7,  -0.1,   999,   999},
        }, {
        { 0,   0, 1.100091E-02,  80.2,  74.5, 348.3,   1.3,   999,   999},
        }, {
        { 0,   0, 9.833932E-03,  85.3,  73.5, 349.4,   2.5,   999,   999},
        }, {
        { 0,   0, 1.474686E-02,  84.2,  70.5, 352.4,   1.8,   999,   999},
        }, {
        /*
         * The order of the two lines below has been inverted by hand from
         * Remasoft's output. Remasoft inverts the two measurements
         * from their order in the JR6 file; PuffinPlot preserved the
         * original ordering.
         */
        { 0,   0, 1.269094E-02,  83.0,  71.0, 351.9,   1.5,   999,   999},
        { 0,   0, 1.272006E-02,  84.6,  70.6, 352.3,   2.0,   999,   999},
        }, {
        { 0,   0, 7.597566E-03, 225.4,  11.5, 351.2,  44.9,   999,   999},
        }, {
        { 0,   0, 6.740364E-03, 226.5,  11.1, 350.7,  43.7,   999,   999},
        }, {
        { 0,   0, 1.242618E-02, 240.1,  10.2, 349.3,  30.4,   999,   999},
        }, {
        { 0,   0,  7.60075E-03, 235.9,  12.2, 351.6,  34.6,   999,   999},
        }, {
        { 0,   0, 1.996873E-02, 215.5,  77.6, 329.5,  31.9,   999,   999},
        }, {
        { 0,   0, 1.332554E-02, 166.0,  86.5, 339.0,  25.4,   999,   999},
        { 1, 100, 1.093618E-02, 312.0,  75.8, 327.2,  12.2,   999,   999},
        { 1, 150, 9.863595E-03, 318.0,  60.0, 318.4,  -1.2,   999,   999},
        { 1, 200, 8.115301E-03, 312.8,  64.1, 319.3,   3.5,   999,   999},
        { 1, 250, 7.862658E-03, 310.5,  54.7, 311.9,  -2.4,   999,   999},
        { 1, 300, 5.904735E-03, 317.6,  57.7, 316.8,  -2.8,   999,   999},
        { 1, 350, 4.138696E-03, 252.3,  70.4, 317.1,  26.6,   999,   999},
        { 1, 400, 5.573921E-03, 308.2,  43.3, 302.6,  -9.3,   999,   999},
        { 1, 425, 3.749787E-03, 333.7,  62.0, 326.0,  -3.4,   999,   999},
        { 1, 450, 3.391799E-03,   8.3,  56.5, 342.7, -11.1,   999,   999},
        { 1, 475, 3.689769E-03, 282.9,  57.7, 305.9,  11.9,   999,   999},
        { 1, 500,  1.42727E-03, 122.6,  59.5,   9.5,  35.2,   999,   999},
        { 1, 520, 7.050738E-03, 130.4,   8.1,  76.3,  40.3,   999,   999},
        { 1, 540, 1.927926E-02, 358.8,  -5.1, 333.9, -73.0,   999,   999},
        { 1, 560, 1.848892E-02,  23.0,   3.1,  22.6, -56.3,   999,   999},
        { 1, 580, 1.642041E-02, 224.5,  -2.4, 224.4,  40.1,   999,   999},
        }, {
        { 0,   0, 4.982821E-03,  88.3,  15.5,  31.7,   8.2,   999,   999},
        }, {
        { 0,   0, 5.079567E-03, 236.8,  14.1, 215.6,  34.7,   999,   999},
        }, {
        { 0,   0, 5.326631E-03, 236.6,  15.2, 216.5,  35.5,   999,   999},
        }, {
        { 0,   0, 1.862337E-03,  99.7,   9.6,  43.3,  13.5,   999,   999},
        }, {
        { 0,   0, 4.957429E-03, 104.1,  19.6,  37.4,  22.8,   999,   999},
        }, {
        { 0,   0, 2.958006E-03, 129.2,  38.2,  32.7,  51.9,   999,   999},
        }, {
        { 0,   0, 4.298698E-03, 146.7,  16.8,  75.5,  50.9,   999,   999},
        }, {
        { 0,   0, 5.941566E-03, 159.6,  25.6,  83.2,  65.3,   999,   999},
        }, {
        { 0,   0, 4.756017E-04,  99.9,  50.5,  20.0,  37.3,   999,   999},
        }, {
        { 0,   0, 8.316021E-04, 121.7,  55.9,  17.6,  51.3,   999,   999},
        }, {
        { 0,   0, 9.545989E-04, 117.9,  51.7,  23.5,  48.4,   999,   999},
        }, {
        { 0,   0, 8.289928E-04, 133.7,  51.4,  26.4,  58.0,   999,   999},
        }, {
        { 0,   0,  3.66112E-04, 179.7,  56.7, 328.7,  76.3,   999,   999},
        }, {
        { 0,   0, 1.304179E-03,  86.4,  43.7,  21.4,  25.9,   999,   999},
        { 1, 100,  8.55124E-04,  70.6,  34.5,  20.3,  10.7,   999,   999},
        { 1, 150, 7.572431E-04,  61.5,  23.8,  21.6,  -2.5,   999,   999},
        { 1, 200, 7.189137E-04,  64.1,  21.5,  25.0,  -2.7,   999,   999},
        { 1, 250, 7.252386E-04,  62.1,  23.7,  22.1,  -2.3,   999,   999},
        { 1, 300, 7.933713E-04,  59.5,  22.7,  20.9,  -4.5,   999,   999},
        { 1, 350, 7.864814E-04,  71.6,  23.4,  28.7,   3.4,   999,   999},
        { 1, 400, 7.134872E-04,  68.4,  23.1,  26.8,   1.1,   999,   999},
        { 1, 425, 9.882186E-04,  52.3,   7.0,  25.4, -21.2,   999,   999},
        { 1, 450, 9.602343E-04,  85.0,   9.3,  47.8,   2.7,   999,   999},
        { 1, 475, 5.774582E-04, 314.3,  43.4, 296.5,   5.6,   999,   999},
        { 1, 500, 2.490462E-04,  87.5, -21.2,  72.3, -16.0,   999,   999},
        { 1, 520,  1.09859E-03,  20.9,   6.3, 354.5, -37.2,   999,   999},
        { 1, 540, 8.442186E-04, 184.8,   9.4, 156.4,  56.2,   999,   999},
        { 1, 560, 8.308676E-04, 300.5,  10.4, 267.2, -14.0,   999,   999},
        { 1, 580, 5.181515E-04, 320.1, -21.5, 258.1, -50.6,   999,   999},
        }, {
        { 0,   0, 4.210392E-04, 102.9,  55.7,  14.6,  41.0,   999,   999},
        }, {
        { 0,   0, 9.526017E-04, 138.6,  52.5,  24.2,  61.1,   999,   999},
        }, {
        { 0,   0, 6.569209E-04, 152.4,  66.0, 352.1,  62.5,   999,   999},
        }, {
        { 0,   0, 9.334768E-04,  96.2,  54.2,  14.6,  36.8,   999,   999},
        }, {
        { 0,   0, 4.477789E-04, 128.3,  53.5,  22.2,  54.9,   999,   999},
        }, {
        { 0,   0, 2.184697E-04, 141.3,  54.1,  20.6,  62.5,   999,   999},
        { 0,   0, 2.160417E-04, 143.5,  53.2,  22.2,  63.9,   999,   999},
        }, {
        { 0,   0, 9.699758E-04, 116.1,  46.5,  30.3,  45.8,   999,   999},
        }, {
        { 0,   0, 4.214701E-04,  92.4,  48.0,  19.9,  31.8,   999,   999},
        }, {
        { 0,   0, 3.570448E-04, 105.8,  40.3,  33.7,  36.4,   999,   999},
        }, {
        { 0,   0, 3.091472E-04,  80.9,  42.8,  19.5,  22.2,   999,   999},
        }, {
        { 0,   0, 3.194871E-04,  84.1,  48.2,  16.3,  27.2,   999,   999},
        }, {
        { 0,   0, 1.217744E-04,  97.1,  30.6,  28.2,  24.8,   999,   999},
        }, {
        { 0,   0, 1.759773E-04,  98.0,  35.4,  24.3,  28.2,   999,   999},
        }, {
        { 0,   0, 3.071302E-04, 106.9,  55.1,   5.6,  42.3,   999,   999},
        }, {
        { 0,   0, 9.403414E-05,  93.6,  31.0,  25.9,  22.7,   999,   999},
        { 0,   0, 6.902652E-05, 118.4,  23.7,  47.5,  36.3,   999,   999},
        }, {
        { 0,   0, 9.189026E-05,  94.8,  32.3,  25.5,  24.2,   999,   999},
        { 0,   0, 9.114636E-05,  99.5,  29.9,  30.1,  26.1,   999,   999},
        }, {
        { 0,   0, 1.394561E-04, 102.8,  33.0,  29.1,  30.2,   999,   999},
        }, {
        { 0,   0, 2.733587E-04, 109.4,  53.6,   8.2,  43.3,   999,   999},
        }, {
        { 0,   0, 1.425693E-04, 106.1,  33.6,  30.2,  32.9,   999,   999},
        }, {
        { 0,   0, 1.448896E-04, 107.2,  33.0,  31.4,  33.3,   999,   999},
        }, {
        { 0,   0, 3.970529E-04, 131.5,  62.1, 355.9,  55.3,   999,   999},
        }, {
        { 0,   0,  6.07112E-04, 141.8,  64.9, 348.2,  58.6,   999,   999},
        }, {
        { 0,   0, 3.849753E-04, 125.2,  62.3, 356.4,  52.3,   999,   999},
        }, {
        { 0,   0, 9.139108E-05, 100.2,  28.6,  31.8,  25.8,   999,   999},
        }, {
        { 0,   0, 7.511005E-04, 144.8,  57.0,   2.0,  63.1,   999,   999},
        { 1, 100, 4.427471E-04, 126.5,  66.5, 349.5,  52.2,   999,   999},
        { 1, 150,  2.92626E-04,  98.4,  60.6, 357.0,  39.5,   999,   999},
        { 1, 200, 2.263736E-04, 116.9,  42.9,  24.5,  44.5,   999,   999},
        { 1, 250, 1.677289E-04,  78.6,  38.3,  11.7,  17.4,   999,   999},
        { 1, 300, 9.741067E-05, 116.4,  59.1,   1.5,  48.0,   999,   999},
        { 1, 350, 1.496462E-04, 136.4,  14.3,  71.2,  43.4,   999,   999},
        { 1, 400, 2.189087E-04,  63.0,   5.8,  24.9, -15.6,   999,   999},
        { 1, 425, 2.475863E-04,  87.0,   2.5,  44.1,  -0.5,   999,   999},
        { 1, 450, 6.484049E-04, 173.8,   6.8, 127.3,  54.4,   999,   999},
        { 1, 475, 5.447697E-04, 209.2,  14.1, 188.9,  52.4,   999,   999},
        { 1, 500, 6.049934E-04, 155.3,  -6.6, 107.0,  36.4,   999,   999},
        { 1, 520, 3.105576E-04,  58.6,  57.9, 347.1,  21.2,   999,   999},
        { 1, 540, 1.357203E-03, 199.0,   4.2, 167.4,  48.6,   999,   999},
        { 1, 560,  3.68581E-04, 163.2,   7.2, 110.1,  52.1,   999,   999},
        { 1, 580, 7.688212E-04, 178.6,  -4.7, 136.1,  43.3,   999,   999},
        }, {
        { 0,   0, 4.498689E-04, 124.2,  56.9,   5.2,  52.1,   999,   999},
        }, {
        { 0,   0, 1.174095E-04, 100.6,  22.0,  37.8,  22.2,   999,   999},
        }, {
        { 0,   0, 2.621927E-04, 109.3,  54.7,   6.7,  43.5,   999,   999},
        }, {
        { 0,   0, 2.234054E-03, 211.0,  73.3, 355.3,  47.7,   999,   999},
        }, {
        { 0,   0, 1.472447E-03, 188.1,  73.3,   4.3,  50.5,   999,   999},
        }, {
        { 0,   0, 1.517531E-03, 208.7,  71.6, 354.5,  49.5,   999,   999},
        }, {
        { 0,   0, 2.542223E-03, 195.4,  76.3,   2.7,  47.1,   999,   999},
        { 1, 100, 1.559744E-03, 100.8,  74.1,  27.3,  35.5,   999,   999},
        { 1, 150,  1.19708E-03,  79.6,  59.4,  41.2,  23.9,   999,   999},
        { 1, 200, 1.254248E-03,  91.3,  46.4,  57.3,  24.7,   999,   999},
        { 1, 250, 9.869336E-04,  94.7,  51.4,  53.2,  28.7,   999,   999},
        { 1, 300, 1.055641E-03,  81.9,  51.4,  49.5,  21.3,   999,   999},
        { 1, 350, 1.164302E-03,  87.8,  28.7,  72.5,  13.9,   999,   999},
        { 1, 400, 1.335889E-03,  80.5,  30.1,  67.9,   9.4,   999,   999},
        { 1, 425, 6.964998E-04,  86.8,  56.1,  46.3,  26.0,   999,   999},
        { 1, 450, 8.005067E-04, 110.7,  46.5,  62.1,  37.4,   999,   999},
        { 1, 475, 1.320341E-03, 104.4,  12.2,  95.6,  18.6,   999,   999},
        { 1, 500, 9.288902E-04, 309.4,  33.5, 327.5,  -7.5,   999,   999},
        { 1, 520, 1.046375E-03, 261.1,  -9.4, 265.3,   2.1,   999,   999},
        { 1, 540, 1.225806E-03, 191.4,   8.0, 212.6,  61.9,   999,   999},
        { 1, 560, 1.531078E-03,  65.8, -13.2,  95.9, -27.3,   999,   999},
        { 1, 580, 1.505357E-03, 350.0,  -3.4, 349.0, -58.0,   999,   999},
        }, {
        { 0,   0, 1.260833E-03, 223.7,  75.4, 354.0,  43.8,   999,   999},
        }, {
        { 0,   0, 1.530163E-03, 202.4,  63.6,   999,   999,   999,   999},
        }, {
        { 0,   0, 1.859274E-03, 221.2,  76.8, 356.0,  43.4,   999,   999},
        }, {
        { 0,   0, 1.150174E-03, 216.5,  73.0, 353.3,  46.8,   999,   999},
        }, {
        { 0,   0, 1.659247E-03, 222.3,  56.9, 329.9,  53.4,   999,   999},
        }, {
        { 0,   0, 1.363305E-03, 180.0,  82.0,   8.0,  42.0,   999,   999},
        }, {
        { 0,   0, 1.386146E-03, 220.4,  75.2, 354.5,  44.6,   999,   999},
        }, {
        { 0,   0, 2.280044E-03, 111.2,  30.6,  21.6,  35.8,   999,   999},
        }, {
        { 0,   0, 2.298608E-03,  84.5,  25.8,   8.1,  15.0,   999,   999},
        { 1, 100, 1.813422E-03,  70.2,  19.3,   2.6,   1.4,   999,   999},
        { 1, 150, 1.738102E-03,  69.2,  17.4,   3.1,  -0.7,   999,   999},
        { 1, 200, 1.714001E-03,  63.1,  14.5,   0.4,  -6.6,   999,   999},
        { 1, 250, 1.595682E-03,  69.6,  14.1,   5.5,  -3.0,   999,   999},
        { 1, 300, 1.500567E-03,  67.5,  13.1,   4.6,  -5.1,   999,   999},
        { 1, 350, 1.406449E-03,  61.4,  11.5,   0.9, -10.0,   999,   999},
        { 1, 400,    0.0013167,  67.2,  11.4,   5.5,  -6.6,   999,   999},
        { 1, 425, 1.126809E-03,  64.9,  12.3,   3.1,  -7.3,   999,   999},
        { 1, 450, 9.828057E-04,  65.3,  10.0,   4.8,  -8.8,   999,   999},
        { 1, 475, 7.531003E-04,  60.7,   6.9,   3.2, -14.1,   999,   999},
        { 1, 500, 1.154816E-03,  88.0,   9.0,  22.4,   5.2,   999,   999},
        { 1, 520,  2.94961E-04,   0.6,  13.3, 300.7, -29.7,   999,   999},
        { 1, 540, 8.269571E-04,   8.0,   9.4, 309.4, -33.2,   999,   999},
        { 1, 560, 1.221065E-03, 102.0,  -9.0,  44.8,   1.5,   999,   999},
        { 1, 580, 2.209751E-03,  43.7,  10.7, 346.4, -20.4,   999,   999},
        }, {
        { 0,   0,  1.87139E-03,  89.3,  24.0,  12.7,  16.8,   999,   999},
        }, {
        { 0,   0,  7.31698E-04, 100.8,  31.5,  14.1,  29.4,   999,   999},
        }, {
        { 0,   0, 1.840326E-03,  98.5,  17.1,  24.2,  18.1,   999,   999},
        }, {
        { 0,   0, 4.057512E-03,  94.8,  35.0,  26.6,  25.4,   999,   999},
        }, {
        { 0,   0, 4.482075E-03, 112.8,  42.0,  27.2,  41.0,   999,   999},
        }, {
        { 0,   0, 3.883735E-03,  94.5,  23.5,  36.5,  18.4,   999,   999},
        }, {
        { 0,   0, 7.660829E-02, 119.1,  18.5,  60.3,  33.8,   999,   999},
        { 1, 100, 6.569529E-02, 115.2,  17.4,  58.7,  30.2,   999,   999},
        { 1, 150, 5.113375E-02, 114.2,  13.7,  61.4,  27.2,   999,   999},
        { 1, 200, 2.620115E-02, 122.6,   7.2,  73.0,  29.1,   999,   999},
        { 1, 250, 3.434618E-02, 118.1,   6.4,  70.3,  25.2,   999,   999},
        { 1, 300, 2.429918E-02, 111.4,   6.1,  65.6,  20.1,   999,   999},
        { 1, 350, 2.539803E-02, 146.2,  -7.9, 105.4,  32.0,   999,   999},
        { 1, 400, 1.717498E-02, 115.2,  -4.0,  76.2,  16.0,   999,   999},
        { 1, 425, 1.732801E-02, 100.7,  -7.0,  68.3,   3.4,   999,   999},
        { 1, 450, 1.733811E-02, 108.3,  -8.0,  74.2,   8.3,   999,   999},
        { 1, 475, 1.258173E-02, 120.6, -14.3,  87.4,  12.1,   999,   999},
        { 1, 500, 5.097784E-03, 132.2, -28.5, 104.9,   7.6,   999,   999},
        { 1, 520,  9.34388E-03, 111.4, -24.1,  87.8,  -1.0,   999,   999},
        { 1, 540, 3.943032E-03, 162.9, -61.6, 137.7, -13.6,   999,   999},
        { 1, 560, 4.419932E-03,  59.9, -31.5,  64.8, -41.7,   999,   999},
        { 1, 580, 7.383252E-03,  58.3,  -1.1,  34.8, -24.1,   999,   999},
        }, {
        { 0,   0, 2.897999E-02,  36.9, -69.8, 124.6, -55.5,   999,   999},
        }, {
        { 0,   0, 5.102793E-02, 115.6, -13.1,  83.0,   9.7,   999,   999},
        }, {
        { 0,   0, 3.087134E-02, 279.9, -40.9, 211.0, -36.5,   999,   999},
        { 1, 100, 2.536178E-02, 292.9, -36.0, 224.4, -41.1,   999,   999},
        { 1, 150, 2.227218E-02, 303.5, -30.5, 238.0, -43.9,   999,   999},
        { 1, 200, 2.157522E-02, 301.6, -30.0, 236.9, -42.4,   999,   999},
        { 1, 250, 1.918802E-02, 310.4, -29.7, 244.8, -47.4,   999,   999},
        { 1, 300, 1.665833E-02, 311.4, -28.3, 247.2, -47.1,   999,   999},
        { 1, 350, 5.473308E-03, 255.2, -42.7, 194.5, -24.7,   999,   999},
        { 1, 400, 3.495683E-03, 278.4, -54.1, 196.4, -43.7,   999,   999},
        { 1, 425, 3.273927E-03, 288.0, -52.9, 202.1, -48.0,   999,   999},
        { 1, 450, 2.961723E-03, 283.0, -55.1, 197.0, -46.5,   999,   999},
        { 1, 475, 3.540918E-03, 253.5, -43.6, 192.8, -24.6,   999,   999},
        { 1, 500,  3.06969E-03, 255.8, -42.9, 194.7, -25.2,   999,   999},
        { 1, 520, 2.355207E-03, 276.3, -67.1, 178.9, -48.8,   999,   999},
        { 1, 540, 2.101285E-03, 266.9, -69.6, 173.4, -46.6,   999,   999},
        { 1, 560, 1.739483E-03, 266.1, -53.6, 191.3, -37.5,   999,   999},
        { 1, 580, 8.275808E-04, 328.9, -38.9, 251.9, -64.8,   999,   999},
        }, {
        { 0,   0, 2.194789E-02,  92.7,  47.2,  20.9,  36.7,   999,   999},
        }, {
        { 0,   0, 6.538203E-03, 171.6, -47.6, 336.4,   1.1,   999,   999},
        }, {
        { 0,   0, 4.681859E-03, 158.1, -42.0, 325.8,   4.7,   999,   999},
        }, {
        { 0,   0, 7.681621E-03, 151.7, -47.1, 323.2,  -1.7,   999,   999},
        }, {
        { 0,   0, 5.322631E-03, 157.9, -41.4, 325.6,   5.2,   999,   999},
        }, {
        { 0,   0, 6.098221E-03, 166.1, -42.1, 331.6,   5.9,   999,   999},
        }, {
        { 0,   0, 1.024321E-02, 147.1, -41.1, 317.8,   2.7,   999,   999},
        }, {
        { 0,   0, 9.747948E-03, 162.5, -45.9, 329.9,   1.7,   999,   999},
        }, {
        { 0,   0, 5.572863E-04, 173.2, -50.5, 337.7,  -1.7,   999,   999},
        }, {
        { 0,   0, 1.057116E-02, 167.9, -35.4, 331.9,  12.7,   999,   999},
        { 1, 100, 9.367364E-03, 157.6, -40.2, 325.0,   6.2,   999,   999},
        { 1, 150, 9.247383E-03, 155.5, -41.1, 323.7,   4.9,   999,   999},
        { 1, 200, 9.429772E-03, 162.1, -41.6, 328.6,   5.8,   999,   999},
        { 1, 250, 8.736367E-03, 149.9, -44.2, 320.9,   0.6,   999,   999},
        { 1, 300, 7.836957E-03, 152.2, -49.6, 324.4,  -3.9,   999,   999},
        { 1, 350, 7.628591E-03, 153.3, -48.9, 324.8,  -2.9,   999,   999},
        { 1, 400, 5.947008E-03, 143.0, -58.7, 323.2, -14.3,   999,   999},
        { 1, 425, 5.540298E-03, 132.7, -57.6, 317.8, -16.3,   999,   999},
        { 1, 450, 4.856532E-03, 130.1, -61.5, 319.1, -20.2,   999,   999},
        { 1, 475, 4.323829E-03, 151.4, -60.1, 327.8, -13.8,   999,   999},
        { 1, 500, 4.359977E-03, 164.7, -56.8, 333.6,  -8.7,   999,   999},
        { 1, 520, 3.842668E-03, 163.6, -60.1, 333.7, -12.0,   999,   999},
        { 1, 540, 3.912697E-03, 152.7, -67.7, 331.3, -20.6,   999,   999},
        { 1, 560, 3.066594E-03, 191.6, -60.9, 347.7, -12.4,   999,   999},
        { 1, 580, 1.547579E-03, 156.8, -75.8, 335.7, -27.7,   999,   999},
        }, {
        { 0,   0, 1.021709E-02, 156.7, -27.5, 320.3,  18.1,   999,   999},
        }, {
        { 0,   0, 8.259335E-03, 174.1, -27.3, 336.4,  21.5,   999,   999},
        }, {
        { 0,   0, 7.013495E-02, 107.7,  31.9,  33.5,  32.5,   999,   999},
        }, {
        { 0,   0, 7.188059E-02,  98.3,  28.7,  31.7,  23.9,   999,   999},
        { 1, 100, 4.491036E-02,  99.5,  28.3,  32.7,  24.6,   999,   999},
        { 1, 150,    0.0326046, 101.6,  25.6,  36.3,  24.6,   999,   999},
        { 1, 200,    0.0165336,  23.1,  26.6, 341.9, -20.0,   999,   999},
        { 1, 250, 1.947742E-02, 114.2,  17.9,  51.0,  29.8,   999,   999},
        { 1, 300, 1.336451E-02, 103.2,  23.8,  38.9,  24.8,   999,   999},
        { 1, 350, 1.704963E-02, 149.7,   2.7,  95.8,  43.7,   999,   999},
        { 1, 400, 5.506197E-03, 101.7,  23.9,  37.9,  23.7,   999,   999},
        { 1, 425, 1.001369E-02,  81.5,   7.9,  38.5,  -1.4,   999,   999},
        { 1, 450, 7.158079E-03,  77.6,   0.6,  41.4,  -9.1,   999,   999},
        { 1, 475, 1.040275E-03,  49.6,  37.2, 357.3,  -0.4,   999,   999},
        { 1, 500, 1.020882E-02, 358.3,  -1.7, 317.3, -51.7,   999,   999},
        { 1, 520, 2.392864E-03, 187.9,   0.0, 152.2,  49.4,   999,   999},
        { 1, 540, 6.467318E-03,  50.2, -16.3,  36.4, -40.6,   999,   999},
        { 1, 560, 4.068587E-03, 335.8, -12.6, 275.3, -55.3,   999,   999},
        { 1, 580,  4.27605E-03, 290.8, -65.5, 172.8, -44.2,   999,   999},
        }, {
        { 0,   0, 2.344099E-02, 112.1,  72.9, 342.5,  44.4,   999,   999},
        }, {
        { 0,   0,     0.042377, 109.0,  42.8,  22.1,  38.3,   999,   999},
        }, {
        { 0,   0,  2.49966E-03, 359.2,  34.9, 356.3,   1.9,   999,   999},
        }, {
        { 0,   0, 2.470101E-03,   0.3,  47.5, 357.2,  14.5,   999,   999},
        { 1, 100,  2.68881E-03, 358.5,  43.2, 355.9,  10.2,   999,   999},
        { 1, 150, 2.468137E-03,   3.0,  39.2, 359.3,   6.2,   999,   999},
        { 1, 200, 2.381302E-03,   9.1,  34.8,   4.5,   2.2,   999,   999},
        { 1, 250, 1.733609E-03,   9.4,  39.0,   4.3,   6.3,   999,   999},
        { 1, 300, 1.232378E-03,  28.5,  53.8,  14.8,  23.2,   999,   999},
        { 1, 350, 8.300729E-04, 207.2,  28.2, 222.1,  55.4,   999,   999},
        { 1, 400, 1.065055E-03,  48.4,  34.0,  36.0,   9.7,   999,   999},
        { 1, 425, 1.503762E-03,  37.8,  19.4,  32.7,  -7.3,   999,   999},
        { 1, 450, 1.116436E-03,  43.9,  34.0,  32.5,   8.2,   999,   999},
        { 1, 475,  1.36576E-03, 327.6,  25.6, 328.1,  -3.0,   999,   999},
        { 1, 500,  8.81223E-04,  39.4,   9.6,  37.7, -16.0,   999,   999},
        { 1, 520, 1.660753E-03,  95.4,  27.2,  75.6,  25.4,   999,   999},
        { 1, 540, 3.772797E-04, 316.7,  67.3, 337.2,  38.4,   999,   999},
        { 1, 560, 3.377588E-03, 132.0,  41.5,  93.0,  56.0,   999,   999},
        { 1, 580, 7.170251E-03, 102.7, -38.2, 119.1, -25.1,   999,   999},
        }, {
        { 0,   0, 2.445077E-03, 349.9,  27.3, 348.0,  -5.3,   999,   999},
        }, {
        { 0,   0, 2.242432E-04, 281.7,  69.5,   1.3,  49.1,   999,   999},
        }, {
        { 0,   0, 9.976522E-05, 323.3,  43.8,   6.3,  16.3,   999,   999},
        }, {
        { 0,   0, 3.256087E-03, 327.3,   8.5, 342.2, -15.9,   999,   999},
        { 1, 100, 4.935717E-03, 327.8,   7.5, 342.4, -17.1,   999,   999},
        { 1, 150, 5.138492E-03, 327.8,   3.8, 341.4, -20.6,   999,   999},
        { 1, 200, 5.138502E-03, 330.6,   3.0, 344.0, -22.1,   999,   999},
        { 1, 250, 4.843242E-03, 329.1,   3.4, 342.7, -21.3,   999,   999},
        { 1, 300, 4.512173E-03, 330.9,   2.5, 344.3, -22.6,   999,   999},
        { 1, 350,  4.30754E-03, 328.2,   1.1, 341.0, -23.3,   999,   999},
        { 1, 400, 3.668528E-03, 334.1,   1.4, 347.4, -24.5,   999,   999},
        { 1, 425,  3.09787E-03, 334.8,   2.2, 348.2, -23.8,   999,   999},
        { 1, 450, 2.680858E-03, 334.6,   1.9, 348.0, -24.1,   999,   999},
        { 1, 475, 2.455749E-03, 333.1,   1.2, 346.2, -24.5,   999,   999},
        { 1, 500, 1.492012E-03, 314.7,   0.0, 326.9, -19.9,   999,   999},
        { 1, 520, 4.322523E-04, 334.7,   7.0, 349.4, -19.1,   999,   999},
        { 1, 540, 7.727211E-04, 258.8, -12.5, 270.2,  -5.6,   999,   999},
        { 1, 560,  3.47537E-04, 282.3, -61.7, 249.8, -55.0,   999,   999},
        { 1, 580, 9.849411E-04, 125.5, -27.4, 149.0,  -8.8,   999,   999},
        }, {
        { 0,   0, 4.188615E-03, 333.7,  16.5, 350.5,  -9.7,   999,   999},
        }, {
        { 0,   0, 4.208919E-03, 329.7,  29.3, 349.9,   3.6,   999,   999}
    }},
    {{
        { 0,   0, 3.229999E-03, 290.1,  43.4,  23.7,  22.8,   999,   999},
        { 2,  10, 2.230259E-03, 327.1, -55.7, 137.3,  16.9,   999,   999},
        { 2,  20, 2.230259E-03, 327.1, -55.7, 137.3,  16.9,   999,   999},
        { 2,  30, 1.115005E-03, 314.9, -55.4, 131.7,  12.8,   999,   999},
        { 2,  40, 5.575351E-04, 303.3, -53.7, 125.9,   8.7,   999,   999},
        { 2,  50, 2.787169E-04, 293.0, -50.7, 120.2,   4.7,   999,   999},
        { 2,  60, 1.393553E-04, 284.1, -46.7, 114.4,   0.7,   999,   999},
        { 2,  70,  6.96861E-05, 276.5, -42.2, 108.5,  -3.3,   999,   999},
        { 2,  80,  3.48407E-05, 270.0, -37.2, 102.6,  -7.3,   999,   999},
        { 2,  90, 1.742437E-05, 264.2, -32.1,  96.7, -11.2,   999,   999},
        { 2, 100, 8.710406E-06, 258.9, -26.8,  90.9, -15.2,   999,   999},
        { 2, 111, 4.355079E-06, 254.0, -21.7,  85.0, -19.2,   999,   999},
        }, {
        { 0,   0, 3.999558E-02, 289.6,  37.2, 143.9,  41.4, 123.0,  42.0},
        { 2,  10, 2.999787E-02,  44.8,  70.5, 359.2,  73.2,  23.0,  53.0},
        { 2,  20, 2.999787E-02,  44.8,  70.5, 359.2,  73.2,  23.0,  53.0},
        { 2,  30, 1.500294E-02,  60.3,  68.2, 357.0,  67.4,  18.0,  48.0},
        { 2,  40, 7.500354E-03,  71.8,  64.2, 354.3,  61.4,  13.0,  43.0},
        { 2,  50, 3.749811E-03,  79.3,  59.0, 351.3,  55.3,   8.0,  38.0},
        { 2,  60, 1.874998E-03,  84.1,  53.1, 348.3,  49.1,   3.0,  33.0},
        { 2,  70, 9.375492E-04,  87.1,  46.8, 345.2,  42.9, 358.0,  28.0},
        { 2,  80, 4.687114E-04,  89.0,  40.2, 342.1,  36.6, 353.0,  23.0},
        { 2,  90, 2.343635E-04,  90.1,  33.4, 339.1,  30.2, 348.0,  18.0},
        { 2, 100, 1.171336E-04,  90.8,  26.5, 336.1,  23.8, 343.0,  13.0},
        { 2, 111, 5.859504E-05,  91.1,  19.5, 333.2,  17.3, 338.0,   8.0},
        }, {
        { 0,   0,    0.5550366,  21.9,  72.1,  95.1,  82.5,  43.0,  43.0},
        { 2,  10,    0.3550059,  28.6,  73.6, 113.3,  82.1,  45.0,  45.0},
        { 2,  20,    0.3550059,  28.6,  73.6, 113.3,  82.1,  45.0,  45.0},
        { 2,  30,    0.1774897,  13.3,  69.6,  67.9,  81.8,  40.0,  40.0},
        { 2,  40, 8.875161E-02,   1.9,  65.0,  37.9,  78.0,  35.0,  35.0},
        { 2,  50, 4.437408E-02, 353.1,  59.9,  22.3,  72.7,  30.0,  30.0},
        { 2,  60, 2.218615E-02, 345.9,  54.4,  12.8,  66.9,  25.0,  25.0},
        { 2,  70, 1.109355E-02, 339.8,  48.8,   6.3,  60.7,  20.0,  20.0},
        { 2,  80, 5.546284E-03, 334.6,  42.9,   1.4,  54.3,  15.0,  15.0},
        { 2,  90, 2.773616E-03, 329.9,  36.9, 357.4,  47.8,  10.0,  10.0},
        { 2, 100, 1.386685E-03, 325.8,  30.7, 354.1,  41.1,   5.0,   5.0},
        { 2, 111, 6.933361E-04, 322.1,  24.5, 351.3,  34.4,   0.0,   0.0},
        }, {
        { 0,   0,    0.4339859,  24.1,  10.9,  24.4,  13.7,  24.0,   2.0},
        { 2,  10,    0.3339907, 220.5,  14.9, 220.1,  12.6, 222.0,  23.0},
        { 2,  20,    0.3339907, 220.5,  14.9, 220.1,  12.6, 222.0,  23.0},
        { 2,  30,    0.1669456, 216.1,   9.6, 215.8,   7.2, 217.0,  18.0},
        { 2,  40, 8.349948E-02, 211.5,   4.3, 211.4,   1.8, 212.0,  13.0},
        { 2,  50,    0.0417436, 206.8,  -0.9, 206.9,  -3.5, 207.0,   8.0},
        { 2,  60, 2.087313E-02, 202.0,  -6.0, 202.1,  -8.8, 202.0,   3.0},
        { 2,  70, 1.043769E-02, 197.0, -11.1, 197.2, -13.9, 197.0,  -2.0},
        { 2,  80, 5.218668E-03, 191.9, -16.1, 192.0, -19.0, 192.0,  -7.0},
        { 2,  90, 2.609304E-03, 186.6, -21.0, 186.7, -24.0, 187.0, -12.0},
        { 2, 100, 1.304824E-03, 181.1, -25.9, 181.2, -28.9, 182.0, -17.0},
        { 2, 111, 6.523338E-04, 175.5, -30.6, 175.4, -33.6, 177.0, -22.0},
        }, {
        { 0,   0,     2.434165, 264.0, -59.9, 125.2, -13.4, 123.0,  22.0},
        { 2,  10,     1.433942, 314.7,  -1.7,  79.8,  43.0,  43.0,  34.0},
        { 2,  20,     1.433942, 314.7,  -1.7,  79.8,  43.0,  43.0,  34.0},
        { 2,  30,    0.7170054, 313.5,   4.8,  70.8,  43.5,  38.0,  29.0},
        { 2,  40,    0.3584909, 312.8,  11.5,  61.6,  43.8,  33.0,  24.0},
        { 2,  50,    0.1792831, 312.3,  18.3,  52.1,  43.7,  28.0,  19.0},
        { 2,  60, 8.962092E-02, 312.2,  25.2,  42.6,  43.1,  23.0,  14.0},
        { 2,  70, 4.481493E-02, 312.3,  32.2,  33.2,  41.9,  18.0,   9.0},
        { 2,  80, 2.240413E-02, 312.6,  39.2,  24.2,  40.1,  13.0,   4.0},
        { 2,  90, 1.120311E-02, 313.1,  46.3,  15.6,  37.7,   8.0,  -1.0},
        { 2, 100, 5.602093E-03, 313.7,  53.4,   7.7,  34.7,   3.0,  -6.0},
        { 2, 111, 2.800797E-03, 314.3,  60.4,   0.4,  31.2, 358.0, -11.0},
        }, {
        { 0,   0, 3.640168E-03,  38.8,  -6.9, 221.9,  47.0,  44.0,  88.0},
        { 2,  10, 2.640175E-03,  67.3,  54.4, 300.3,  22.9, 321.0,  24.0},
        { 2,  20, 2.640175E-03,  67.3,  54.4, 300.3,  22.9, 321.0,  24.0},
        { 2,  30, 1.319973E-03,  79.0,  55.8, 301.0,  16.1, 316.0,  19.0},
        { 2,  40, 6.599812E-04,  91.3,  55.8, 301.3,   9.2, 311.0,  14.0},
        { 2,  50, 3.299757E-04, 103.3,  54.3, 301.4,   2.2, 306.0,   9.0},
        { 2,  60, 1.649955E-04, 114.2,  51.7, 301.4,  -4.9, 301.0,   4.0},
        { 2,  70,  8.25027E-05, 123.5,  48.0, 301.2, -12.0, 296.0,  -1.0},
        { 2,  80, 4.125172E-05, 131.6,  43.7, 301.1, -19.0, 291.0,  -6.0},
        { 2,  90, 2.062447E-05, 138.6,  39.0, 301.1, -26.0, 286.0, -11.0},
        { 2, 100, 1.031272E-05, 144.8,  34.1, 301.3, -33.0, 281.0, -16.0},
        { 2, 111, 5.156048E-06, 150.5,  29.2, 301.9, -39.9, 276.0, -21.0},
        }, {
        { 0,   0,    0.4399627, 348.6, -63.3, 150.8,  14.2, 150.0,  15.0},
        { 2,  10,     0.340061,  70.6,   0.8, 242.7,  19.1, 243.0,  22.0},
        { 2,  20,     0.340061,  70.6,   0.8, 242.7,  19.1, 243.0,  22.0},
        { 2,  30,    0.1699814,  74.5,  -4.9, 237.8,  14.1, 238.0,  17.0},
        { 2,  40, 8.500169E-02,  78.3, -10.7, 232.9,   9.0, 233.0,  12.0},
        { 2,  50, 4.250275E-02,  82.1, -16.7, 228.0,   4.0, 228.0,   7.0},
        { 2,  60, 2.125284E-02,  86.0, -22.7, 223.0,  -1.0, 223.0,   2.0},
        { 2,  70, 1.062505E-02,  90.3, -28.6, 218.0,  -6.0, 218.0,  -3.0},
        { 2,  80, 5.312121E-03,  95.1, -34.3, 212.9, -10.9, 213.0,  -8.0},
        { 2,  90, 2.655896E-03, 100.8, -39.7, 207.8, -15.9, 208.0, -13.0},
        { 2, 100, 1.328117E-03, 107.4, -44.6, 202.6, -20.8, 203.0, -18.0},
        { 2, 111, 6.640363E-04, 115.4, -48.7, 197.4, -25.7, 198.0, -23.0},
        }, {
        { 0,   0, 5.571985E-03,  32.8,  16.5,   999,   999,   999,   999},
        { 2,  10, 3.571715E-03, 354.2,  33.2,   999,   999,   999,   999},
        { 2,  20, 3.571715E-03, 354.2,  33.2,   999,   999,   999,   999},
        { 2,  30, 1.786313E-03, 350.2,  28.1,   999,   999,   999,   999},
        { 2,  40, 8.930051E-04, 345.9,  23.0,   999,   999,   999,   999},
        { 2,  50, 4.464921E-04, 341.4,  18.0,   999,   999,   999,   999},
        { 2,  60, 2.232081E-04, 336.8,  13.0,   999,   999,   999,   999},
        { 2,  70, 1.116289E-04, 331.9,   8.2,   999,   999,   999,   999},
        { 2,  80, 5.580793E-05, 326.9,   3.5,   999,   999,   999,   999},
        { 2,  90, 2.791152E-05, 321.6,  -1.2,   999,   999,   999,   999},
        { 2, 100, 1.395424E-05, 316.3,  -5.8,   999,   999,   999,   999},
        { 2, 111, 6.976339E-06, 310.7, -10.2,   999,   999,   999,   999},
        }, {
        { 0,   0,    0.3999494,  63.0,  62.6, 157.5,  63.6, 134.0,  73.0},
        { 2,  10,    0.2000079,   1.6,   9.8,  46.9,  33.8,  43.0,  23.0},
        { 2,  20,    0.2000079,   1.6,   9.8,  46.9,  33.8,  43.0,  23.0},
        { 2,  30,    0.1000036, 356.3,   5.5,  40.7,  29.5,  38.0,  18.0},
        { 2,  40,    0.0499992, 350.7,   1.3,  34.7,  25.0,  33.0,  13.0},
        { 2,  50, 2.499892E-02, 345.0,  -2.8,  29.0,  20.4,  28.0,   8.0},
        { 2,  60, 1.249912E-02, 339.1,  -6.7,  23.4,  15.7,  23.0,   3.0},
        { 2,  70, 6.250041E-03, 333.2, -10.6,  18.1,  10.9,  18.0,  -2.0},
        { 2,  80, 3.124626E-03, 327.0, -14.3,  13.0,   6.0,  13.0,  -7.0},
        { 2,  90, 1.562727E-03, 320.8, -18.0,   8.1,   1.0,   8.0, -12.0},
        { 2, 100, 7.811832E-04, 314.5, -21.6,   3.3,  -4.1,   3.0, -17.0},
        { 2, 111, 3.905658E-04, 308.1, -25.2, 358.8,  -9.3, 358.0, -22.0},
        }, {
        { 0,   0,    0.4300106, 300.6,  42.6,  42.2,  44.5,  43.0,  13.5},
        { 2,  10,    0.2300261, 311.8,  63.2, 310.3,  65.7,   2.0,  53.0},
        { 2,  20,    0.2300261, 311.8,  63.2, 310.3,  65.7,   2.0,  53.0},
        { 2,  30,        0.115, 315.0,  57.5, 315.1,  60.2, 357.0,  48.0},
        { 2,  40, 5.750148E-02, 316.3,  51.4, 317.5,  54.2, 352.0,  43.0},
        { 2,  50, 2.875083E-02, 316.5,  45.1, 318.5,  48.0, 347.0,  38.0},
        { 2,  60, 1.437488E-02, 315.9,  38.7, 318.5,  41.5, 342.0,  33.0},
        { 2,  70, 7.187536E-03, 314.8,  32.2, 317.9,  34.9, 337.0,  28.0},
        { 2,  80, 3.593398E-03, 313.4,  25.6, 316.9,  28.3, 332.0,  23.0},
        { 2,  90, 1.797038E-03, 311.7,  18.9, 315.6,  21.5, 327.0,  18.0},
        { 2, 100, 8.984018E-04, 309.9,  12.2, 314.2,  14.7, 322.0,  13.0},
        }}};
    
    final private String[][] sampleNames = {{
        "BC0101A1", "BC0101A2", "BC0101B",  "BC0101C",  "BC0101D1",
        "BC0101D2", "BC0101F",  "BC0102A1", "BC0102A2", "BC0102B1",
        "BC0102B2", "BC0201A1", "BC0201A2", "BC0201B1", "BC0201B2",
        "BC0202A",  "BC0202B",  "BC0203A",  "BC0203B1", "BC0203B2",
        "BC0203C1", "BC0203C2", "BC0204A",  "BC0204B",  "BC0204C",
        "BC0301A",  "BC0301B",  "BC0301C",  "BC0301D",  "BC0301E",
        "BC0301F",  "BC0301G",  "BC0301H",  "BC0301I",  "BC0301J",
        "BC0301K",  "BC0301L",  "BC0301M",  "BC0302A",  "BC0302B",
        "BC0302C",  "BC0302D",  "BC0401A1", "BC0401A2", "BC0401B1",
        "BC0401B2", "BC0401C1", "BC0401C2", "BC0401D1", "BC0401D2",
        "BC0401E1", "BC0401E2", "BC0401E3", "BC0401F1", "BC0401F2",
        "BC0401F3", "BC0401G1", "BC0401G2", "BC0401G3", "BC0701B1",
        "BC0701B2", "BC0701C1", "BC0701C2", "BC0701C3", "BC0701D1",
        "BC0701D2", "BC0701D3", "BC0701E1", "BC0701E2", "BC0701E3",
        "BC0801A1", "BC0801A2", "BC0801B",  "BC0801C1", "BC0801C2",
        "BC0901A",  "BC0901B",  "BC0901C",  "BC0902A1", "BC0902B",
        "BC0902C",  "BC1001A",  "BC1001B",  "BC1002A",  "BC1002B",
        "BC1002C",  "BC1002D",  "BC1002E",  "BC1002F",  "BC1002G",
        "BC1101A1", "BC1101A2", "BC1101B",  "BC1101E",  "BC1201A",
        "BC1201B",  "BC1201C",  "BC1201D",  "BC1301A",  "BC1301B",
        "BC1301C",  "BC1401A",  "BC1401B",  "BC1402A",  "BC1402B",
        "BC1402C"
    }, {
        "Re01",     "Re02",     "Re03",     "Re04",     "Re05",
        "Re06",     "Re07",     "Re08",     "Re09",     "Re10",
    }};
    
    String[] filenames = {
        "BC-Mersin (TDemag-580).jr6",
        "re.jr6"
    };
    
    /**
     * If the P1 orientation parameter is other than 12, the uncorrected
     * specimen vector will differ between PuffinPlot's loaded data and
     * Remasoft's expected data. This is because PuffinPlot converts to its own
     * convention upon loading, but Remasoft retains the orientation parameters
     * specified in the JR6 file. This array specifies the angular
     * offset between PuffinPlot's and Remasoft's for each file.
     * Theoretically each treatment step (!) may have its own orientation
     * parameters, but mostly (and, in particular, for the test files used
     * here) they remain constant throughout a file.
     */
    double[] specimenRotation = {
        0,
        180
    };
    
    /**
     *  Treatment types are assigned an integer code to allow them
     *  to be stored in the double array of expected values.
     */
    private final TreatmentType[] treatmentTypes = {
        /* 0 */ TreatmentType.NONE,
        /* 1 */ TreatmentType.THERMAL,
        /* 2 */ TreatmentType.DEGAUSS_XYZ
    };

    private final Correction sampleCorrection = new Correction(false, false,
                Correction.Rotation.SAMPLE, false);

    private final Correction formationCorrection = new Correction(false, false,
                Correction.Rotation.FORMATION, false);

    @Test
    public void testConstructor() {
        checkOneFile(0);
        checkOneFile(1);
    }
    
    private void checkOneFile(int fileIndex) {
        
        final String filename = filenames[fileIndex];
        
        final InputStream stream =
                TestFileLocator.class.getResourceAsStream(filename);
        
        final Jr6Loader jr6loader = new Jr6Loader(stream, filename);
        final List<TreatmentStep> loadedData = jr6loader.getTreatmentSteps();
        assertFalse(loadedData.isEmpty());
        assertTrue(loadedData.stream().
                allMatch(d -> d.getMeasurementType() == MeasurementType.DISCRETE));

        final Suite suite = new Suite("test");
        for (TreatmentStep d: loadedData) {
            suite.addTreatmentStep(d);
        }
        
        final double[][][] expFile = expected[fileIndex];
        
        for (int sampleIndex = 0; sampleIndex < expFile.length;
                sampleIndex++) {
            final String sampleName = sampleNames[fileIndex][sampleIndex];
            final Sample sample = suite.getSampleByName(sampleName);
            assertNotNull(sample);
            final double[][] expSample = expFile[sampleIndex];
            assertEquals(expSample.length, sample.getTreatmentSteps().size());
            for (int i = 0; i < expSample.length; i++) {
                final TreatmentStep actualTreatmentStep =
                        sample.getTreatmentSteps().get(i);
                final double[] expectedValues = expSample[i];
                checkOneTreatmentStep(expectedValues, actualTreatmentStep,
                        specimenRotation[fileIndex]);
            }
        }
    }

    private void checkOneTreatmentStep(final double[] expectedValues,
            final TreatmentStep actualTreatmentStep, double rotation) {
        assertEquals(treatmentTypes[(int) expectedValues[0]],
                actualTreatmentStep.getTreatmentType());
        
        final double expectedTreatmentLevel =
                treatmentTypes[(int) expectedValues[0]].isMagneticField() ?
                expectedValues[1] / 1000 : expectedValues[1];
        assertEquals(expectedTreatmentLevel,
                actualTreatmentStep.getTreatmentLevel(), 1e-10);
        /*
         * See JavaDoc for specimenRotation for an explanation of the rotZ
         * deployed in the declination check here.
         */
        assertEquals(expectedValues[3],
                actualTreatmentStep.getMoment().
                        rotZ(Math.toRadians(rotation)).getDecDeg(), 0.1);
        assertEquals(expectedValues[4],
                actualTreatmentStep.getMoment().getIncDeg(), 0.1);
        if (expectedValues[5] != 999) {
            assertEquals(expectedValues[5],
                    actualTreatmentStep.getMoment(sampleCorrection).getDecDeg(), 0.1);
        }
        if (expectedValues[6] != 999) {
            assertEquals(expectedValues[6],
                    actualTreatmentStep.getMoment(sampleCorrection).getIncDeg(), 0.1);
        }
        if (expectedValues[7] != 999) {
            assertEquals(expectedValues[7],
                    actualTreatmentStep.getMoment(formationCorrection).getDecDeg(),
                    0.1);
        }
        if (expectedValues[8] != 999) {
            assertEquals(expectedValues[8],
                    actualTreatmentStep.getMoment(formationCorrection).getIncDeg(),
                    0.1);
        }
    }
    
    @Test
    public void testNonExistentFile() {
        /*
         * The filename is a UUID in the root directory, which makes it
         * fairly certain that it doesn't exist.
         */
        final Jr6Loader jr6Loader = Jr6Loader.readFile(
                new File("/12233e64-2cf3-11e8-9643-2316aaca3cc2"),
                Collections.emptyMap());
        assertEquals(0, jr6Loader.getTreatmentSteps().size());
        assertTrue(jr6Loader.getMessages().size() > 0);
    }
    
    @Test
    public void testExceptionOnReadingStream() {
         /* We pass an unconnected PipedInputStream to guarantee that an
          * IOException will be thrown when the constructor tries to read
          * from it.
          */ 
        final Jr6Loader jr6Loader = new Jr6Loader(new PipedInputStream(), "test");
        assertEquals(0, jr6Loader.getTreatmentSteps().size());
        assertTrue(jr6Loader.getMessages().size() > 0);        
    }
    
    @Rule
    public TemporaryFolder temporaryFolder = new TemporaryFolder();
    
    @Test
    public void testReadFile() {
        try {
            final File output = temporaryFolder.newFile("test.jr6");
            final FileWriter fileWriter = new FileWriter(output);
            fileWriter.write("Re01      NRM       8.07-22.02 22.21  -4 156  "
                    + "78   0   0   0   0  6  0  6  0   1\n");
            fileWriter.close();
            Jr6Loader.readFile(output, Collections.emptyMap());
        } catch (IOException ex) {
            Logger.getLogger(Jr6LoaderTest.class.getName()).
                    log(Level.SEVERE, null, ex);
            fail("IO Exception");
        }
    }
    
}
