--- !ditz.rubyforge.org,2008-03-06/issue 
title: Cache (some) lines on equal-area plots
desc: |-
  The inefficient method of drawing the lines on the equal-area plots
  is producing quite noticeable lag. For every refresh, every line
  segment is recalculated from scratch. So, for example, for an A95
  confidence interval this means calculating a small circle of Vec3s,
  segmenting it in case it crosses the equator, then projecting the
  parts onto the plot area. All these operations are computationally
  expensive. Projected lines on equal-area plots need to be cached
  and only updated at need -- possibly not all of them, but profiling
  can identify the worst culprits.
type: :bugfix
component: PuffinPlot
release: "1.03"
reporter: Pontus Lurcock <pont@talvi.net>
status: :closed
disposition: :fixed
creation_time: 2013-09-25 15:32:56.698197 Z
references: []

id: 93a3f80e60f01ff1808c2e2f44d5f86bf5e9b9b5
log_events: 
- - 2013-09-25 15:32:56.882264 Z
  - Pontus Lurcock <pont@talvi.net>
  - created
  - ""
- - 2013-09-25 15:33:05.794276 Z
  - Pontus Lurcock <pont@talvi.net>
  - changed status from unstarted to in_progress
  - ""
- - 2013-09-26 13:22:48.786619 Z
  - Pontus Lurcock <pont@talvi.net>
  - closed with disposition fixed
  - |-
    I've now implemented a simple cache for the suite EA plot, which
    seems to improve reponsiveness a bit when there are a lot of lines
    on it. Sample and suite plots tend to be less busy so I'm leaving them
    for now -- can open another bug if they start causing trouble.
