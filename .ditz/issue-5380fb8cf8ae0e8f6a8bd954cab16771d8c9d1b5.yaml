--- !ditz.rubyforge.org,2008-03-06/issue 
title: Check canvas / screen / printer resolutions OK
desc: |-
  Currently everything is plotted without magnification or reduction
  on screen and scaled to paper size for print. But it looks as though
  insufficient resolution on the canvas itself is producing aliasing
  artifacts on the printouts -- e.g. slightly offset point fills on 
  OS X, and slightly jagged confidence ellipses on equal-area plots.
  Now that scaling is resolution-independent, it would be easy to 
  maintain a very high resolution on the canvas and scale it down by
  (say) 10 for plotting on the screen. (When zooming is implemented,
  the zoom percentage would simply be scaled so that 100% was in fact
  10%.)
type: :task
component: PuffinPlot
release: "1.0"
reporter: Pontus Lurcock <pont@talvi.net>
status: :closed
disposition: :fixed
creation_time: 2009-04-08 07:08:11.571732 Z
references: []

id: 5380fb8cf8ae0e8f6a8bd954cab16771d8c9d1b5
log_events: 
- - 2009-04-08 07:08:12.680510 Z
  - Pontus Lurcock <pont@talvi.net>
  - created
  - ""
- - 2009-04-25 02:41:47.082857 Z
  - Pontus Lurcock <pont@talvi.net>
  - commented
  - |-
    This turns out on closer inspection to be not one issue but several.
    
    1. Offset point fills seem to be an OS X bug; opened separately as #56.
    2. Jagged confidence ellipses are a result of using java.awt.Polygon,
       which uses integer coordinates. I will try substituting GeneralPath
       which should fix it.
    3. All the other drawing, as far as I know, uses float or double co-
       ordinates, so we shouldn't need to scale it up to get accuracy.
- - 2009-04-25 03:35:52.027018 Z
  - Pontus Lurcock <pont@talvi.net>
  - closed with disposition fixed
  - |-
    OK, fixed the jaggies with a GeneralPath (and fixed a printing bug in
    passing), so closing this now.
