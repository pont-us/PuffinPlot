



public class AboutAction extends AbstractAction {

	private static final long serialVersionUID = 1L;

	public void actionPerformed(ActionEvent e) {
		JOptionPane.showMessageDialog(PuffinApp.app.mainWindow, "This is the about box.");
	}
}




public class OpenAction extends AbstractAction {

    private static final long serialVersionUID = 1L;

    public OpenAction() {
        super("Open…");
    }
    
    public void actionPerformed(ActionEvent e) {

        boolean useSwingChooser = true; // !PuffinApp.MAC_OS_X;
        File[] files = null;
        
        if (useSwingChooser) {
            JFileChooser chooser = new JFileChooser();
            chooser.setMultiSelectionEnabled(true);
            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int choice = chooser.showOpenDialog(PuffinApp.app.mainWindow);
            if (choice == JFileChooser.APPROVE_OPTION)
                files = chooser.getSelectedFiles();
        } else {
            FileDialog fd = new FileDialog(PuffinApp.app.mainWindow, "Open file",
                    FileDialog.LOAD);
            fd.setVisible(true);
            String filename = fd.getFile();
            if (filename != null) {
                File file = new File(fd.getDirectory(),fd.getFile());
                files = new File[] { file };
            }
        }
        if (files != null) PuffinApp.app.openFiles(files);
    }
}




public class PageSetupAction extends AbstractAction {

    private static final long serialVersionUID = 1L;

    public PageSetupAction() {
        super("Page Setup…");
    }

    public void actionPerformed(ActionEvent arg0) {
        PuffinApp.app.showPageSetupDialog();
    }

}




public class PcaAction extends AbstractAction {

	private static final long serialVersionUID = 1L;

	public PcaAction() {
		super("PCA");
	}
	
	public void actionPerformed(ActionEvent e) {
		PuffinApp.app.getCurrentSample().doPca();
		PuffinApp.app.mainWindow.repaint();
	}
}




public class PrefsAction extends AbstractAction {

	private static final long serialVersionUID = 1L;

	public PrefsAction() {
		super("Preferences…");
	}

	public void actionPerformed(ActionEvent e) {
		JOptionPane.showMessageDialog(PuffinApp.app.mainWindow, "This is the preferences dialog.");
	}
}




public class PrintAction extends AbstractAction {

    private static final long serialVersionUID = 1L;

    public PrintAction() {
        super("Print…");
    }
    
    public void actionPerformed(ActionEvent e) {
        PrinterJob job = PrinterJob.getPrinterJob();
        PageFormat pf = new PageFormat();
        pf.setOrientation(PageFormat.LANDSCAPE);
        job.setPrintable(PuffinApp.app.mainWindow.graphDisplay,
                PuffinApp.app.getCurrentPageFormat());
        // PageFormat pf = job.pageDialog(job.defaultPage());

        // NB must explicitly request orientation to work around
        // Java bug -- see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6633656 ,
        // https://bugs.launchpad.net/ubuntu/+source/cupsys/+bug/156191
        
        // Oops, even this doesn't help. Ah well, it works as long
        // as a default orientation is set in the CUPS setup.
        PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();
        aset.add(OrientationRequested.LANDSCAPE);
        aset.add(new Copies(1));
        aset.add(new JobName("PuffinPlot", null));
        
        PrintService[] services =
                PrinterJob.lookupPrintServices();

        if (services.length > 0) {
            System.out.println("selected printer " + services[0].getName());
            try {
                job.setPrintService(services[0]);
                job.pageDialog(aset);
                if (job.printDialog(aset)) {
                    job.print(aset);
                }
            } catch (PrinterException pe) {
                System.err.println(pe);
            }
        }

    }
}



public class QuitAction extends AbstractAction {

	private static final long serialVersionUID = 1L;

	public QuitAction() {
		super("Quit");
	}
	
	public void actionPerformed(ActionEvent e) {
		System.out.println("quit");
		System.exit(0);
	}
}
